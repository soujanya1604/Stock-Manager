@model StockChartViewModel

<h1>Select a Stock Symbol</h1>

<!-- Dropdown for selecting stock symbol -->
<form method="get" action="@Url.Action("GetStockPrice", "Stock")">
    <div class="form-group">
        <label for="symbol">Stock Symbol</label>
        <select id="symbol" name="symbol" class="form-control" asp-items="ViewBag.StockSymbols" required>
            <option value="">-- Select Stock --</option> <!-- Default option -->
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Show Stock Data</button>
</form>

@if (ViewBag.StockData != null)
{
    <h2>Stock Data for @ViewBag.SelectedSymbol</h2>

    <!-- Display the stock price chart -->
    <div style="width: 60%; margin: 0 auto;">
        <canvas id="stockChart" width="400" height="200"></canvas>
    </div>

    <!-- Display Stock Data in Text Format -->
    <div style="margin-top: 20px;">
        <h3>Stock Data</h3>
        <ul>
            @foreach (var date in ViewBag.StockData.Dates)
            {
                var dateIndex = Array.IndexOf(ViewBag.StockData.Dates, date); // Get index of date
                var closingPrice = ViewBag.StockData.ClosingPrices[dateIndex];  // Get closing price at same index
                var openingPrice = ViewBag.StockData.OpeningPrices[dateIndex];  // Get opening price
                var highPrice = ViewBag.StockData.HighPrices[dateIndex];       // Get high price
                var lowPrice = ViewBag.StockData.LowPrices[dateIndex];         // Get low price

                <li>
                    Date: @date
                    - Opening Price: $@openingPrice.ToString("F2")
                    - Closing Price: $@closingPrice.ToString("F2")
                    - High Price: $@highPrice.ToString("F2")
                    - Low Price: $@lowPrice.ToString("F2")

                    <!-- Edit and Delete Options for each stock entry -->
                    <a href="@Url.Action("Edit", "Stock", new { symbol = ViewBag.SelectedSymbol, date = date })" class="btn btn-warning btn-sm">Edit</a> |
                    <a href="@Url.Action("Delete", "Stock", new { symbol = ViewBag.SelectedSymbol, date = date })" class="btn btn-danger btn-sm">Delete</a>
                </li>
            }
        </ul>
    </div>
}

<!-- Chart.js Canvas Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('stockChart').getContext('2d');
    var stockChart = new Chart(ctx, {
        type: 'line', // Line chart type for stock data
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Dates)), // X-axis: Dates
            datasets: [{
                label: '@Model.Symbol Stock Prices',
                data: @Html.Raw(Json.Serialize(Model.ClosingPrices)), // Y-axis: Closing Prices
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                fill: true, // Fill the area under the line
                tension: 0.1 // Smooth the line
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Date'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Closing Price (USD)'
                    },
                    ticks: {
                        beginAtZero: false
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(tooltipItem) {
                            return '$' + tooltipItem.raw.toFixed(2); // Format the tooltip to show prices in USD
                        }
                    }
                }
            }
        }
    });
</script>
