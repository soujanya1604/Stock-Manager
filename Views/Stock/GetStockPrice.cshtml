@model StockChartViewModel

<h1 class="mb-4">Select a Stock Symbol</h1>

<!-- Dropdown for selecting stock symbol -->
<form method="get" action="@Url.Action("GetStockPrice", "Stock")" class="mb-3">
    <div class="form-group mb-2">
        <label for="symbol">Stock Symbol</label>
        <select id="symbol" name="symbol" class="form-control" asp-items="ViewBag.StockSymbols" required>
            <option value="">-- Select Stock --</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary mt-2">Show Stock Data</button>
</form>

<a href="@Url.Action("Create", "Stock")" class="btn btn-success mb-4">Create New Stock</a>

@if (ViewBag.StockData != null)
{
    <h2 class="mt-4">Stock Data for @ViewBag.SelectedSymbol</h2>

    <!-- Display the stock price chart -->
    <div class="my-4" style="max-width: 800px; margin: 0 auto;">
        <canvas id="stockChart" height="300"></canvas>
    </div>

    <!-- Display Stock Data in Table Format -->
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Date</th>
                <th>Opening Price</th>
                <th>Closing Price</th>
                <th>High Price</th>
                <th>Low Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < ViewBag.StockData.Dates.Length; i++)
            {
                var date = ViewBag.StockData.Dates[i];
                var openingPrice = ViewBag.StockData.OpeningPrices[i];
                var closingPrice = ViewBag.StockData.ClosingPrices[i];
                var highPrice = ViewBag.StockData.HighPrices[i];
                var lowPrice = ViewBag.StockData.LowPrices[i];

                <tr>
                    <td>@date</td>
                    <td>@openingPrice.ToString("F2")</td>
                    <td>@closingPrice.ToString("F2")</td>
                    <td>@highPrice.ToString("F2")</td>
                    <td>@lowPrice.ToString("F2")</td>
                    <td>
                        <a href="@Url.Action("Edit", "Stock", new { symbol = ViewBag.SelectedSymbol, date = date })"
                           class="btn btn-sm btn-outline-secondary me-1">Edit</a>
                        <a href="@Url.Action("Delete", "Stock", new { symbol = ViewBag.SelectedSymbol, date = date })"
                           class="btn btn-sm btn-outline-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Chart.js Canvas Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('stockChart').getContext('2d');
    var stockChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Dates)),
            datasets: [{
                label: '@Model.Symbol Stock Prices',
                data: @Html.Raw(Json.Serialize(Model.ClosingPrices)),
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                fill: true,
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: { title: { display: true, text: 'Date' } },
                y: { title: { display: true, text: 'Closing Price (USD)' }, ticks: { beginAtZero: false } }
            }
        }
    });
</script>